---
export const prerender = false;

import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);

const postspage=5;
var startIndex:number=0;
var endIndex:number=postspage;

if (Astro.request.method === "POST") {
	try {
		const data = await Astro.request.formData();
    
		const startIndexEntry: FormDataEntryValue | null = data.get("startIndex");
		startIndex = startIndexEntry ? parseInt(startIndexEntry as string) : startIndex; 
		
		const endIndexEntry: FormDataEntryValue | null = data.get("endIndex");
		endIndex = endIndexEntry ? parseInt(endIndexEntry as string) : postspage; 

		const flagEntry: FormDataEntryValue | null = data.get("flag");
		const flag = flagEntry ? parseInt(flagEntry as string) : 1; // 0 es el valor predeterminado si flagEntry es null
		
		if (startIndex >= 0 && endIndex <=posts.length) {

			if (flag){

                if (endIndex<posts.length){
				// Ejemplo de uso
				const cantidadPosts: number = posts.length;  // Cantidad total de posts en Astro
				var [newStartIndex, newEndIndex] = mapearIndicesAdelante(startIndex, endIndex, cantidadPosts);
				
				startIndex=newStartIndex;
				endIndex=newEndIndex;

				if (posts.length==endIndex){

						startIndex=(posts.length-postspage)				
					}

				}
			
			}else{

				if (startIndex>0) {

                    var [newStartIndex, newEndIndex] = mapearIndicesHaciaAtras(startIndex, endIndex);
					startIndex=newStartIndex;
					endIndex=newEndIndex;
                    if(startIndex==0)
					{

						endIndex=postspage;

					}					
				}
	
			}

		}
		
	} catch (error) {
		if (error instanceof Error) {
		console.error(error.message);
		}
	}

}


function mapearIndicesAdelante(startIndex: number, endIndex: number, cantidadPosts: number): [number, number] {
    // Calcula los nuevos índices
		const newStartIndex = Math.max(0, Math.min(startIndex + postspage, cantidadPosts));
		const newEndIndex = Math.max(0, Math.min(endIndex + postspage, cantidadPosts));

    return [newStartIndex, newEndIndex];
}

function mapearIndicesHaciaAtras(startIndex: number, endIndex: number): [number, number] {
    // Calcula los nuevos índices
    const newStartIndex = Math.max(0, startIndex - postspage);
    const newEndIndex = Math.max(0, endIndex - postspage);

    return [newStartIndex, newEndIndex];
}

---

<!doctype html>
<html lang="es">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />

		<style>
			
			ul {

				display: flex;
				width:100%;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;

			}
			ul li {
				
				width: calc(50% - 1rem);
			
			}
			ul li * {
				
				text-decoration: none;
				transition: 0.2s ease;
			}
			
			ul li:first-child {
			
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;

				& a {

					display: flex;
					flex-direction: column;
					align-items: center;
					gap: 1rem;

					
				}
					
			}

			ul li:first-child img {
				width: 100%;
			}newE

			ul li:first-child .title {
				font-size: 2.369rem;
			}

			ul li img {

				margin-bottom: 0.5rem;
				border-radius: 12px;
				
			}
			ul li a {
				display: block;
			
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;endIndex
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
			form {

				display:inline;
			
			}

			nav {

				display:flex;
				justify-content: space-around;
				
			}
		</style>
	</head>
	<body>
		<Header />
		<main>

			<nav>
					<form method="POST">
						
						<input type="hidden" name="endIndex" value={endIndex} />
						<input type="hidden" name="flag" value=0 />
						<input type="hidden" name="startIndex" value={startIndex} />
						<button>Anterior</button>
											

					</form>	
					<label>Entrada {startIndex} a la {endIndex} de un total de {posts.length}</label>	
					<form method="POST">
						<input type="hidden" name="startIndex" value={startIndex} />
						<input type="hidden" name="endIndex" value={endIndex} />
						<input type="hidden" name="flag" value=1 />
						<button>Siguiente</button>
					</form>
			</nav>	
			<section>
				<ul>
					{ 
						posts.slice(startIndex, endIndex).map((post) => (
						<li>
							<a href={`/blog/${post.slug}/`}>
							    <img width={729} height={360} src={post.data.heroImage} alt="" />
								<h4 class="title">{post.data.title}</h4>
							    <p class="date">
								<FormattedDate date={post.data.pubDate} />
						        </p>
							</a>
						</li>
						))
	                }
				</ul>
			</section>
			
		</main>
		<Footer />
		
	</body>
</html>